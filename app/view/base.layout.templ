package view //import github.com/neifen/htmx-login/app/view

templ Base(errMsgs, sucMsgs []string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Companion</title>
			<link rel="shortcut icon" href="/static/img/favicon.png" type="image/png"/>
			<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
			<script src="/static/js/htmx.min.js"></script>
			<script type="text/javascript">
            window.addEventListener("DOMContentLoaded", (event) => {
                document.body?.addEventListener('htmx:responseError', function(event) {
                if (event.detail.xhr.status === 401) {
                    console.log("not authorized");
                    // Refresh the session
                    fetch('token/refresh', {
                        method: 'POST',
                        headers: {
                            'rid': 'session'
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        } else {
                            // Retry the original request
                            const eventType = event.detail.requestConfig.triggeringEvent.type;
                            htmx.trigger(event.detail.elt, eventType);
                        }
                    })
                    .catch(error => {
                    throw new Error(`There has been a problem with refreshing the session: ${error}`);
                    });
                }
                });
            });
            </script>
            <style>
                .scrollbar-hidden::-webkit-scrollbar {
                    width: 0;
                }
                
               .scrollbar-hidden {
                    scrollbar-width: none;
                }
            </style>
		</head>
		<body class="bg-gray-100 flex items-center justify-center min-h-screen" id="base">
			{ children... }
			// @partials.FlashMessages(errMsgs, sucMsgs)
			<!-- Error Popup -->
			@infoMessage("")
			@errorMessage("")
		</body>
	</html>
}

templ BuildBase(errMsgs, sucMsgs []string,
	cmp templ.Component) {
	@Base(errMsgs, sucMsgs) {
		@cmp
	}
}
